#import "skin://osk/common.view"

// On screen keyboard

$ui.osk.shift = 0;
$ui.osk.caps = 0;

$ui.osk.shifted = $ui.osk.shift ^^ $ui.osk.caps;

multiopt($view.path,
         $view.selopt,
         void,
         $global.glw.osk.userKeyboard,
         vectorize($global.glw.views.standard.osk),
         link(_("Default"), "skin://osk/default.view")
         );

widget(container_y, {
  onEvent(cancel, deliverEvent($ui.osk.eventSink, "Cancel"));
  onEvent(back,   deliverEvent($ui.osk.eventSink, "Cancel"));
  padding: [$ui.width / 6, 0];
  space(1);
  widget(backdrop, {
    source: "showtime:pixmap:gradient:148,158,168:80,90,100";
    cornerRadius: $ui.size / 4;
    widget(container_y, {
      padding: $ui.size;
      spacing: 4;

      widget(label, {
	sizeScale: 1.5;
	caption: $ui.osk.title;
	shadow: true;
      });
      
      widget(container_x, {
	spacing: 4;
	height: $ui.size * 2;

	widget(backdrop, {
	  weight: 10;
	  filterConstraintX: true;
	  filterConstraintY: true;
	  source: "showtime:pixmap:gradient:30,30,30:50,50,60";
	  cornerRadius: 4;
	  widget(text, {
	    password: $ui.osk.password;
	    oskPassword: true;
	    padding: [$ui.size, 0];
	    bind($ui.osk.text);
	    sizeScale: 1.5;
	    permanentCursor: true;
	    id: "input";
	  });
	});
	ACTION("←", targetedEvent("input", Left));
	ACTION("→", targetedEvent("input", Right));
	ACTION(_("Clear"), {
	  $ui.osk.text = void;
	}, 1.5);
	ACTION(_("Cancel"), deliverEvent($ui.osk.eventSink, "Cancel"), 1.5);
	ACTION(_("OK"), deliverEvent($ui.osk.eventSink, "Ok"), 1.5);
      });

      widget(loader, {
        source: $view.path;
        time: 0;
      });

      widget(container_x, {
        height: $ui.size * 2;
        spacing: $ui.size;

        space(6);

	ACTION("←", targetedEvent("opt", Decrease), 1, false, $view.canLayoutPrev);
	ACTION("→", targetedEvent("opt", Increase), 1, false, $view.canLayoutNext);


        widget(container_y, {
          weight: 6;
          filterConstraintX: true;

          widget(label, {
            shadow: true;
            caption: _("Keyboard layout:");
          });

          widget(deck, {
            $view.canLayoutPrev = canSelectPrevious();
            $view.canLayoutNext = canSelectNext();

            width: $ui.size * 8;
            id: "opt";
            effect: blend;
            time: 0.1;

            cloner($view.selopt.options, label, {
              align: left;
	      shadow: true;
	      caption: $self.title;
            });
          });
        });
      });
    });
  });
  space(1);
});
