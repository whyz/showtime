#import "theme://include/infobox.view"
#import "theme://include/buttons.view"
#import "theme://include/separators.view"
#import "theme://include/slider.view"

$view.showFilter = $page.model.filter && 1;

widget(keyintercept, {
  bind($page.model.filter);
  .enabled = $page.model.canFilter;
  
  widget(container_y, {
    .filterConstraintX = true;
    
    widget(expander_y, {
      .filterConstraintX = true;
      .expansion = scurve($view.showFilter, 0.25);
      .alpha     = scurve($view.showFilter, 0.25);
      
      widget(container_x, {
	widget(backdrop, {
	  .filterConstraintX = true;
	  .color = [0.3, 0.3, 0.3];
	  PLATE_GFX();
	  widget(container_x, {
	    
	    widget(label, {
	      .caption = "Filter: ";
	    });
	    
	    widget(label, {
	      .caption = $page.model.filter;
	    });
	    
	  });
	});
	ICON2("theme://svg/Delete.svg",
	      "Clear",
	      {
		$page.model.filter = void;
	      },
	      PLATE_COLOR_DELETE(),
	      1, 0.1);
      });
    });

    
    
    widget(container_x, {
      .filterConstraintY = true;
      .padding = [5, 5, 5, 0];
      .spacing = 5;
      // ------ The list --------------------------------------
      widget(list_y, {
	.weight = 1;
	.id = "list";
	&view.focused = focusedChild();
	

	cloner($page.model.nodes, container_x, {

	  suggestFocus($self.playing);

	  delta($view.showArtists, 
		select($self.metadata.artist, 1, 0));


	  widget(icon, {
	    .align = left;
	    .color = select(isFocused(), [1.0, 1.0, 1.0], PLATE_COLOR_AUDIO());
	    .source = translate($self.type,  "theme://svg/File",
				"archive",   "theme://svg/Archive",
				"artist",    "theme://svg/User",
				"audio",     "theme://svg/Music",
				"directory", "theme://svg/Folder",
				"dvd",       "theme://svg/Disc",
				"playlist",  "theme://svg/List",
				"video",     "theme://svg/Movie",
				"album",     "theme://svg/Disc",
				"plugin",    "theme://svg/Plugin"
			       ) + ".svg";
	    .shadow = true;
	  });
	  
	  widget(backdrop, {
	    .weight = 1;
	    .autoRefocusable = true;
	    .focusable = 1.0;
	    .focusOnClick = true;
	    
	    onEvent(activate,
		    translate($self.type, navOpen($self.url),
			      "audio", playTrackFromSource($self, $parent.model)
			     ));
	    
	    .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
	    
	    .color = 0.6;
	    PLATE_GFX();
	    
	    widget(label, {
	      .color = select(isFocused(), 1.0, 0.6);
	      .caption = $self.metadata.title;
	      .ellipsize = true;
	    });
	  });

	  widget(backdrop, {
	    .hidden = $view.showArtists == 0;
	    .weight = 0.5;
	    .autoRefocusable = true;
	    .focusable = isLink($self.metadata.artist);
	    .focusOnClick = true;
	    .filterConstraintX = true;
	    
	    onEvent(activate, navOpen($self.metadata.artist));
	    
	    .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
	    
	    .color = 0.6;
	    PLATE_GFX();
	    
	    widget(label, {
	      .color = select(isFocused(), 1.0, 0.6);
	      .caption = $self.metadata.artist;
	      .ellipsize = true;
	    });
	  });

	});
      });
      
      LIST_Y_SLIDER("list");

      widget(container_y, {
	.padding = [0,0,0,5];
	// ------ The sidepane --------------------------------------
	skinInfoboxGroup(.filterConstraintX = true; .filterConstraintY = true; widget(container_y, {
	  widget(loader, {
	    .time = 0.1;
	    .effect = blend;
	    .source = "theme://directoryviews/infobox/" + $view.focused.type + ".view";
	    .args ?= $view.focused;
	  });
	}));
      });
    });

    widget(dummy, {
      .height = $ui.playdeckheight;
    });

  });
});
