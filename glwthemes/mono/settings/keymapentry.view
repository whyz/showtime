#import "theme://include/buttons.view"
#import "theme://include/defs.view"
#import "theme://include/separators.view"

widget(container_x, {

  widget(label, {
    .filterConstraintX = true;
    .weight = 1.0;
    .align = left;
    .caption = $self.metadata.title;
  });

  VERTICAL_SEPARATOR();

  widget(backdrop, {
    .align = left;
    .filterConstraintX = true;
    .weight = 1.0;


    .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
    .color = [0.45, 0.45, 0.5];
    .source = "theme://graphics/shadedplate.png";
    .border =  [4, 4, 4, 4];
    .padding = [0, -4, 0, -4];

    .focusable = true;
    .focusOnClick = true;
    onEvent(KeyCode, {
      $self.keycode1 = $event;
    });

    widget(label, {
      .align = center;
      .alpha = select($self.keycode1, 1.0, 0.5);
      .caption = $self.keycode1 ?? "<not set>";
    });
  });


  widget(container_x, {
    .align = left;
    .filterConstraintX = true;
    .weight = 0.5;

    ICON2("theme://svg/Delete.svg",
	  "Clear",
	  {
	    $self.keycode1 = void;
	  },
	  PLATE_COLOR_DELETE(),
	  1, 0.1);
  });
  



  VERTICAL_SEPARATOR();



  widget(backdrop, {
    .align = left;
    .filterConstraintX = true;
    .weight = 1.0;


    .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
    .color = [0.45, 0.45, 0.5];
    .source = "theme://graphics/shadedplate.png";
    .border =  [4, 4, 4, 4];
    .padding = [0, -4, 0, -4];

    .focusable = true;
    .focusOnClick = true;
    onEvent(KeyCode, {
      $self.keycode2 = $event;
    });

    widget(label, {
      .align = center;
      .alpha = select($self.keycode2, 1.0, 0.5);
      .caption = $self.keycode2 ?? "<not set>";
    });
  });

  widget(container_x, {
    .align = left;
    .filterConstraintX = true;
    .weight = 0.5;

    ICON2("theme://svg/Delete.svg",
	  "Clear",
	  {
	    $self.keycode2 = void;
	  },
	  PLATE_COLOR_DELETE(),
	  1, 0.1);
  });
  


});
